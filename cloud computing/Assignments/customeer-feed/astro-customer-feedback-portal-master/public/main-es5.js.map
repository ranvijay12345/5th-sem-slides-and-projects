{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/page-not-found/page-not-found.component.ts","webpack:///src/app/pages/page-not-found/page-not-found.component.html","webpack:///src/app/pages/review/new-review/new-review.component.ts","webpack:///src/app/pages/review/new-review/new-review.component.html","webpack:///src/app/pages/review/review.component.ts","webpack:///src/app/pages/review/review.component.html","webpack:///src/app/services/review/review.service.ts","webpack:///src/app/services/user/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","userService","title","$","submit","getAll","res","console","log","selector","templateUrl","styleUrls","AppModule","declarations","providers","schemas","bootstrap","PageNotFoundComponent","NewReviewComponent","formBuilder","reviewService","router","route","spinner","isSubmitted","review_types","show","getReviewTypes","data","hide","err","reviewForm","group","email","required","review_type","description","valid","addNew","value","fire","text","icon","showCancelButton","confirmButtonColor","confirmButtonText","result","navigate","queryParams","a","queryParamsHandling","setValue","target","onlySelf","controls","get","goToReview","onSubmit","ReviewComponent","review","isAdmin","setupContent","searchForm","getReviewByEmail","reset","total_like","total_dislike","updateRating","addNewReview","ReviewService","http","API_URL","subscribe","response","error","post","providedIn","UserService","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReviewComponent } from './pages/review/review.component';\nimport { NewReviewComponent } from './pages/review/new-review/new-review.component';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\n\n\nconst routes: Routes = [{\n  path: 'review',\n  component: ReviewComponent\n}, {\n  path: 'new-review',\n  component: NewReviewComponent\n}, {\n  path: '',\n  redirectTo: '/review',\n  pathMatch: 'full'\n\n}, {\n  path: '**',\n  component: PageNotFoundComponent\n}]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { UserService } from './services/user/user.service';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular';\n  constructor(private userService: UserService) {\n    $(function () {\n      $(\"form\").submit(function () { return false; });\n    })\n\n    this.userService.getAll().then(res => {\n      console.log(res)\n    })\n  }\n}\n","<div>\r\n    <ngx-spinner size=\"large\">\r\n        <p class=\"loading\">Please wait while we are processing your request</p>\r\n    </ngx-spinner>\r\n    <!-- <div class=\"preloader\">\r\n        <div class=\"lds-ripple\">\r\n            <div class=\"lds-pos\"></div>\r\n            <div class=\"lds-pos\"></div>\r\n        </div>\r\n    </div> -->\r\n    <div id=\"main-wrapper\">\r\n        <header class=\"topbar\" data-navbarbg=\"skin5\">\r\n            <nav class=\"navbar top-navbar navbar-expand-md navbar-dark\">\r\n                <h3 style=\"margin-left: 20px;\">FP - Feedback Portal</h3>\r\n            </nav>\r\n        </header>\r\n        <div class=\"page-wrapper\">\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"card\">\r\n                            <router-outlet></router-outlet>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <footer class=\"footer text-center\">\r\n                All Rights Reserved by FP - Feedback Portal. Designed and Developed by <a href=\"\">KamilNoor</a>.\r\n            </footer>\r\n        </div>\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserService } from './services/user/user.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReviewService } from './services/review/review.service';\nimport { NewReviewComponent } from './pages/review/new-review/new-review.component';\nimport { ReviewComponent } from './pages/review/review.component';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewReviewComponent,\n    ReviewComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    UserService,\n    ReviewService\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ReviewService } from 'src/app/services/review/review.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport Swal from \"sweetalert2\";\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-new-review',\n  templateUrl: './new-review.component.html',\n  styleUrls: ['./new-review.component.scss']\n})\nexport class NewReviewComponent implements OnInit {\n\n  reviewForm: FormGroup;\n  isSubmitted = false;\n\n  review_types: any = []\n\n  constructor(private formBuilder: FormBuilder, private reviewService: ReviewService, private router: Router, private route: ActivatedRoute, private spinner: NgxSpinnerService) { }\n\n  ngOnInit(): void {\n    this.spinner.show()\n    this.reviewService.getReviewTypes().then((res) => {\n      this.review_types = res.data\n      this.spinner.hide()\n    }, (err) => {\n      this.review_types = []\n      this.spinner.show()\n    })\n\n    /*########### Form ###########*/\n    this.reviewForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      title: ['', [Validators.required]],\n      review_type: ['', [Validators.required]],\n      description: ['', [Validators.required]]\n    })\n  }\n\n  onSubmit(): any {\n    this.isSubmitted = true;\n    if (!this.reviewForm.valid) {\n      return false;\n    } else {\n      this.spinner.show()\n      this.reviewService.addNew({\n        data: this.reviewForm.value\n      }).then((res: any) => {\n        this.spinner.hide()\n        Swal.fire({\n          title: 'Congratulations',\n          text: \"Record(s) was added successfully\",\n          icon: 'success',\n          showCancelButton: false,\n          confirmButtonColor: '#3085d6',\n          confirmButtonText: 'Close'\n        }).then((result) => {\n          if (result.value) {\n            this.router.navigate(['/review'], { queryParams: { a: 'y' }, queryParamsHandling: 'merge' });\n          }\n        })\n      }, (err) => {\n        // todo: err handler\n        this.spinner.show()\n      })\n    }\n\n  }\n\n  goToReview(): void {\n    this.router.navigate(['/review'], { queryParams: {}, queryParamsHandling: 'merge' });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.reviewForm.controls; }\n\n  changeReview(e) {\n    this.review_type.setValue(e.target.value, {\n      onlySelf: true\n    })\n  }\n\n  // Getter method to access formcontrols\n  get review_type() {\n    return this.reviewForm.get('review_type');\n  }\n\n}","<div class=\"card-body\">\n    <h5 class=\"card-title\">New Review</h5>\n    <hr>\n    <div class=\"row\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <button class=\"btn btn-secondary\" style=\"float: right\" type=\"button\" (click)=\"goToReview()\">View Review</button>\n                </div>\n            </div>\n            <div class=\"row custom-wrapper\">\n                <div class=\"col-md-12\">\n                    <!-- Form starts -->\n                    <form [formGroup]=\"reviewForm\" (ngSubmit)=\"onSubmit()\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <div class=\"form-group\">\n                                    <label>Email</label><span></span>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n                                        placeholder=\"eg: john@hotmail.com\"\n                                        [ngClass]=\"{ 'is-invalid': isSubmitted && f.email.errors }\" />\n                                    <div *ngIf=\"isSubmitted && f.email.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.email.errors.required\">Input is required</div>\n                                        <div *ngIf=\"f.email.errors.email\">Invalid email address</div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label>Title</label>\n                                    <textarea class=\"form-control\" formControlName=\"title\" placeholder=\"Title\"\n                                        [ngClass]=\"{ 'is-invalid': isSubmitted && f.title.errors }\"></textarea>\n                                    <div *ngIf=\"isSubmitted && f.title.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.title.errors.required\">Input is required</div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\" *ngIf=\"review_types\">\n                                    <label>Review Type</label>\n                                    <select class=\"custom-select\"\n                                        [ngClass]=\"{ 'is-invalid': isSubmitted && f.review_type.errors }\"\n                                        (change)=\"changeReview($event)\" formControlName=\"review_type\">\n                                        <option value=\"\">Please select type</option>\n                                        <option *ngFor=\"let rt of review_types\" [value]=\"rt.id\">{{rt.description}}\n                                        </option>\n                                    </select>\n                                    <div *ngIf=\"isSubmitted && f.review_type.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.review_type.errors.required\">Input is required</div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label>Description</label>\n                                    <textarea class=\"form-control\" rows=\"5\" formControlName=\"description\" placeholder=\"Please explain about your review...\"\n                                        [ngClass]=\"{ 'is-invalid': isSubmitted && f.description.errors }\"></textarea>\n                                    <div *ngIf=\"isSubmitted && f.description.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.description.errors.required\">Input is required</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-primary\" style=\"float: right\">Submit</button>\n                    </form><!-- Form ends -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ReviewService } from 'src/app/services/review/review.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from \"sweetalert2\";\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.scss']\n})\nexport class ReviewComponent implements OnInit {\n\n  review: any = []\n  isAdmin: boolean = false\n\n  searchForm: FormGroup;\n\n  constructor(private reviewService: ReviewService, private router: Router, private route: ActivatedRoute, private formBuilder: FormBuilder, private spinner: NgxSpinnerService) { }\n\n  ngOnInit(): void {\n    this.setupContent()\n\n    this.searchForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    })\n  }\n\n  setupContent() {\n    this.spinner.show()\n    this.reviewService.getAll().then((res) => {\n      this.review = res.data\n      this.spinner.hide()\n    }, (err) => {\n      this.review = []\n      this.spinner.hide()\n    })\n  }\n\n  onSubmit() {\n    let email = this.searchForm.value.email\n    if (email) {\n      this.spinner.show()\n      this.reviewService.getReviewByEmail({\n        email: this.searchForm.value.email\n      }).then((res) => {\n        this.review = res.data\n        this.spinner.hide()\n      }, (err) => {\n        this.review = []\n        this.spinner.hide()\n      })\n    }\n  }\n\n  reset() {\n    this.searchForm.reset()\n    this.setupContent()\n  }\n\n  addNewReview() {\n    this.router.navigate(['/new-review'], { queryParams: {}, queryParamsHandling: 'merge' });\n  }\n\n  addLike(id, total_like, total_dislike) {\n    total_dislike = total_dislike ? total_dislike : 0\n    total_like = total_like ? total_like : 0\n    this.spinner.show()\n    this.reviewService.updateRating({\n      id,\n      total_like: total_like + 1,\n      total_dislike\n    }).then((res) => {\n      this.spinner.hide()\n      Swal.fire({\n        title: 'Congratulations',\n        text: \"Record(s) was added successfully\",\n        icon: 'success',\n        showCancelButton: false,\n        confirmButtonColor: '#3085d6',\n        confirmButtonText: 'Close'\n      }).then((result) => {\n        if (result.value) {\n          this.setupContent()\n        }\n      })\n    }, (err) => {\n      this.review = []\n      this.spinner.hide()\n    })\n  }\n\n  addDislike(id, total_like, total_dislike) {\n    total_dislike = total_dislike ? total_dislike : 0\n    total_like = total_like ? total_like : 0\n    this.spinner.show()\n    this.reviewService.updateRating({\n      id,\n      total_like,\n      total_dislike: total_dislike + 1\n    }).then((res) => {\n      this.spinner.hide()\n      Swal.fire({\n        title: 'Congratulations',\n        text: \"Record(s) was added successfully\",\n        icon: 'success',\n        showCancelButton: false,\n        confirmButtonColor: '#3085d6',\n        confirmButtonText: 'Close'\n      }).then((result) => {\n        if (result.value) {\n          this.setupContent()\n        }\n      })\n    }, (err) => {\n      this.review = []\n      this.spinner.hide()\n    })\n  }\n}\n","<div class=\"card-body\">\n    <h5 class=\"card-title\">All Review</h5>\n    <hr>\n    <div class=\"row\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <button class=\"btn btn-primary\" style=\"float: right\" type=\"button\" (click)=\"addNewReview()\">Add New\n                        Review</button>\n                </div>\n            </div>\n            <br>\n            <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"row\">\n                    <div class=\"col-10\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Search by Email\" formControlName=\"email\"\n                            autofocus>\n                    </div>\n                    <div class=\"col-2\">\n                        <button class=\"btn btn-primary\" style=\"float: right;margin-left:5px\"\n                            type=\"submit\">Search</button>\n                        <button class=\"btn btn-secondary\" style=\"float: right\" type=\"button\"\n                            (click)=\"reset()\">Reset</button>\n                    </div>\n                </div>\n            </form>\n            <br>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"bg-white rounded box-shadow\" *ngIf=\"review.length > 0\">\n                        <h6 class=\"border-bottom border-gray pb-2 mb-0\"></h6>\n                        <div class=\"media text-muted pt-3\" *ngFor=\"let p of review\">\n                            <img data-src=\"holder.js/32x32?theme=thumb&bg=007bff&fg=007bff&size=1\" alt=\"\"\n                                class=\"mr-2 rounded\">\n                            <div class=\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\">\n                                <div class=\"d-flex justify-content-between align-items-center w-100\">\n                                    <strong class=\"text-gray-dark review-desc\">{{p.title}}</strong>\n                                </div>\n                                <span class=\"d-block review-title\">{{p.review_desc}}</span>\n                                <span class=\"d-block review-description\">{{p.description}}</span>\n\n                                <br><br>\n                                <div class=\"row\">\n                                    <div class=\"col\">\n                                        <span class=\"like\"><i class=\"glyphicon glyphicon-thumbs-down\"\n                                                (click)=\"addLike(p.review_id, p.total_like, p.total_dislike)\"><img\n                                                    src=\"https://img.icons8.com/ios/50/000000/good-quality.png\" /></i></span>\n                                        <span>{{p.total_like}}</span>\n                                    </div>\n                                    <div class=\"col\">\n                                        <span class=\"like\"><i class=\"glyphicon glyphicon-thumbs-up\"\n                                                (click)=\"addDislike(p.review_id, p.total_like, p.total_dislike)\"><img\n                                                    src=\"https://img.icons8.com/ios/50/000000/poor-quality.png\" /></i></span>\n                                        <span>{{p.total_dislike}}</span>\n                                    </div>\n                                    <div class=\"col\"></div>\n                                    <div class=\"col\"></div>\n                                    <div class=\"col\"></div>\n                                    <div class=\"col\"></div>\n                                    <div class=\"col\"></div>\n                                    <div class=\"col\"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment as ENV } from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReviewService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Promise<any> {\n    return new Promise(resolve => {\n      this.http.get(`${ENV.API_URL}/review/get-all`).subscribe((response: any) => {\n        if (response.error) {\n          console.error(response);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  }\n\n  addNew(req): Promise<any> {\n    return new Promise(resolve => {\n      this.http.post(`${ENV.API_URL}/review/add-new`, req.data).subscribe((response: any) => {\n        if (response.error) {\n          console.error(response);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  }\n\n  updateRating(req): Promise<any> {\n    console.log(req)\n    return new Promise(resolve => {\n      this.http.post(`${ENV.API_URL}/review/update-rating`, req).subscribe((response: any) => {\n        if (response.error) {\n          console.error(response);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  }\n\n  getReviewTypes(): Promise<any> {\n    return new Promise(resolve => {\n      this.http.get(`${ENV.API_URL}/review/get-review-types`).subscribe((response: any) => {\n        if (response.error) {\n          console.error(response);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  }\n\n  getReviewByEmail(req): Promise<any> {\n    return new Promise(resolve => {\n      console.log(req)\n      this.http.get(`${ENV.API_URL}/review/get-review-by-email/${req.email}`).subscribe((response: any) => {\n        if (response.error) {\n          console.error(response);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment as ENV } from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Promise<any> {\n    return new Promise(resolve => {\n      this.http.get(`${ENV.API_URL}/user/get-all`).subscribe((response: any) => {\n        if (response.error) {\n          console.error(response);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // API_URL: 'http://localhost:7080/api',\r\n  API_URL: 'api',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}